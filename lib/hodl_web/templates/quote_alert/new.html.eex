
<%= csrf_meta_tag() %>
<div id="app_basic" class="container">

<b-form @submit="onSubmit">
<h1>New Price alert</h1>
Current coin: <b-form-select v-model="selected" :options="options"></b-form-select> Current price: {{this.options[this.selected]["price_usd"]}} USD  <br> <br>
<div style="white-space: nowrap"> <h4 style="display: inline-block">I want to be notified when {{options[selected].name}} is </h4>
 <b-form-select v-model="comparator" :options="comparator_options"></b-form-select>
<input type="text" style="width: 150px;" v-model="user_alert_price"> USD <svg onclick="trash()" v-b-popover.hover.top="'Eliminate decimals'" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M3 6v18h18v-18h-18zm5 14c0 .552-.448 1-1 1s-1-.448-1-1v-10c0-.552.448-1 1-1s1 .448 1 1v10zm5 0c0 .552-.448 1-1 1s-1-.448-1-1v-10c0-.552.448-1 1-1s1 .448 1 1v10zm5 0c0 .552-.448 1-1 1s-1-.448-1-1v-10c0-.552.448-1 1-1s1 .448 1 1v10zm4-18v2h-20v-2h5.711c.9 0 1.631-1.099 1.631-2h5.315c0 .901.73 2 1.631 2h5.712z"/></svg>
</div>
<input type="submit" value="Create">
</b-form>
</div>


<span><%= link "Back", to: Routes.quote_alert_path(@conn, :index) %></span>

<script>

var app = new Vue({
    el: '#app_basic',
    data: function(){
        return {
            selected: null,
            hello: "world",
            options: [],
            user_alert_price: null,
            comparator_options: ["equal or greater than", "lower than"],
            comparator: "equal or greater than",
            csrf_token: null,
            loading: true
        }
    },
    created: function (){
        get_top_coins();
        let csrf_token = document.querySelector('meta[name="csrf-token"]').content;
        this.csrf_token = csrf_token;
    },
    methods: {
        onSubmit(event){
            event.preventDefault();
            create_quote_alert();
        }
    },
    watch: {
        selected: function(){
            this.user_alert_price = this.options[this.selected]["price_usd"]
        }

    }
})

  function create_quote_alert() {
    let csrf_token = document.querySelector('meta[name="csrf-token"]').content;

    let base_url = "<%= Routes.quote_alert_url(@conn, :create) %>" ;
    let url = base_url
    let data = {}
    data._csrf_token = csrf_token;
    let quote_alert = {comparator: app.comparator, price_usd: app.user_alert_price, coin_uuid: app.options[app.selected]["uuid"]};
    data.quote_alert = quote_alert;

    let json = JSON.stringify(data);

    let xhr = new XMLHttpRequest();
    xhr.open("POST", url, true);
    xhr.setRequestHeader('Content-type','application/json; charset=utf-8');
    xhr.onload = function () {
	  let response = JSON.parse(xhr.responseText);
     console.log(response)
      if (xhr.status == "201") {
        console.log("quote alert created!")
      } else {
        console.log("quote alert wasn't created!");
      }
      }
      xhr.send(json);
      
  }

function get_top_coins(){
      let json = JSON.stringify({});
      let xhr = new XMLHttpRequest();
      xhr.open("GET", "/top-coins", true);
      xhr.setRequestHeader('Content-type','application/json; charset=utf-8');
      xhr.onload = function () {
	    let response = JSON.parse(xhr.responseText);
        console.log(response)
        let arr = [{value: null, text: "Select a coin for your alert"}]
        let coins = arr.concat(response.coins)
        for (i = 1; i < 101; i++){
            coins[i]["text"] = coins[i]["name"]
            coins[i]["value"] = i
        }

      if (xhr.status == "200") {
        console.log("Got coins! wow")
        app.options =  coins;
        app.selected = 1;
        app.user_alert_price = app.options[1]["price_usd"]

      } else {
        console.log("No coins :(")
        }
      }
      xhr.send(json);
}

function trash(){
  let price_alert_number = app.user_alert_price
  let new_number = Math.trunc(price_alert_number)
  app.user_alert_price = new_number;
}
</script>